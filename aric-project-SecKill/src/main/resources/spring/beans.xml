<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
  http://www.springframework.org/schema/context  
  http://www.springframework.org/schema/context/spring-context-3.1.xsd
   http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
    <!-- 自动扫描 -->
    <context:component-scan base-package="com.aric.seckill" >
        <!--不扫描controller-->
        <context:exclude-filter type="annotation"
         expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 引入jdbc配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--配置数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          >
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://192.168.137.143:3306/sec-kill?characterEncoding=utf8" />
        <property name="username" value="root" />
        <property name="password" value="root" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="5"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="20"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="20"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="1"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="10000"></property>
    </bean>

    <!-- 配置sqlSessionFactory （约定大于配置）-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource" />
        <!--集成mybatis begin-->
        <!--配置全局mybatis配置文件-->
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <!--扫描实体类包，使用别名  value="entity;entity2"-->
        <property name="typeAliasesPackage" value="com.aric.seckill.entity,com.aric.seckill.dto"/>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
        <!--集成mybatis end-->
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类,使其自动注入 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--引用sqlSessionFactory，防止提前初始化sqlSessionFactory，配置参数的属性为空（jdbc.properties未加载），
        所以推荐使用sqlSessionFactoryBeanName 后处理的方式，
        在其使用该bean时，才会初始化，不推荐使用sqlSessionFactory
        -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--配置需要扫描的dao包-->
        <property name="basePackage" value="com.aric.seckill.mapper" />
    </bean>

    <!-- 配置(事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!--使用注解的声明式事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>